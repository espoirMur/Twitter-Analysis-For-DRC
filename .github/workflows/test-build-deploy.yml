name: Continuous Integration and Delivery

on:
  push:
    branches:
      - master
      - deploy-to-new-server
jobs:
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    name: Run the test suite
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Setup Python 3.6.10
        uses: actions/setup-python@v1
        with:
          python-version: 3.6.10
      - name: Run Project testing
        # env:
        #  DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          echo 'something that is not tested is broken'
  build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@v1
      - name: Add environment variables to .env
        run: |
          echo 'for now I will not build using docker images'
  deploy:
    name: Deploy to DigitalOcean
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout master
        uses: actions/checkout@v1
      - name: Add environment variables to .env
        run: |
          echo '''${{ secrets.DOT_ENV_FILE }}''' >> .env
      - name: Copy repository contents via scp
        uses: appleboy/scp-action@master
        env:
          HOST: ${{ secrets.HOST_IP_ADDRESS }}
          USERNAME: ${{ secrets.HOST_USERNAME }}
          PORT: ${{ secrets.PORT }}
          KEY: ${{ secrets.PRIVATE_KEY }}
        with:
          source: "."
          target: "/Projects/balobi_nini"
      - name: Executing remote command
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_IP_ADDRESS  }}
          USERNAME: ${{ secrets.HOST_USERNAME  }}
          PORT: ${{ secrets.PORT }}
          KEY: ${{ secrets.PRIVATE_KEY }}
          script: ls
      #- name: Build and deploy images on DigitalOcean
      #  env:
      #    SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      #  run: |
      #    echo ${{secrets.HOST_IP_ADDRESS}}
      #    export DOCKER_BUILDKIT=1
      #    export COMPOSE_DOCKER_CLI_BUILD=1
      #    export DOCKER_HOST=ssh://${{secrets.HOST_USERNAME}}@${{secrets.HOST_IP_ADDRESS}}
      #    docker-compose up -d --build
      #    docker-compose -f docker-compose-prod.yml exec worker python manage.py db migrate
      #    docker-compose -f docker-compose-prod.yml exec worker airflow initdb
